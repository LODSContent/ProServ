{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Primary location for all resources."
      }
    },
    "appServicePlanName": {
      "type": "string",
      "metadata": {
        "description": "Name of the App Service Plan."
      }
    },
    "appServiceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the App Service."
      }
    },
    "openAiName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure OpenAI service."
      }
    },
    "appInsightsName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Application Insights instance."
      }
    },
    "searchServiceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Search service."
      }
    },

    // Additional parameters to handle private endpoints for OpenAI and Search
    "networkIsolation": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "If true, deploy private endpoints for OpenAI and Search."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet-default",
      "metadata": {
        "description": "Name of the VNet if deploying private endpoints."
      }
    },
    "privateEndpointSubnetName": {
      "type": "string",
      "defaultValue": "app-int-subnet",
      "metadata": {
        "description": "Subnet name for private endpoints, if networkIsolation is true."
      }
    },
    "azureOpenAiPe": {
      "type": "string",
      "defaultValue": "openai-pe",
      "metadata": {
        "description": "Name of the Azure OpenAI private endpoint, if networkIsolation is enabled."
      }
    },
    "azureSearchPe": {
      "type": "string",
      "defaultValue": "search-pe",
      "metadata": {
        "description": "Name of the Azure Search private endpoint, if networkIsolation is enabled."
      }
    }
  },
  "variables": {
    // We'll unify the plan to S1 (Standard)
    "appServicePlanSku": {
      "name": "F1",
      "tier": "Free"
    },
    "cognitiveServicesGroupId": "Account",
    "searchGroupId": "searchService"
  },
  "resources": [
    // 1) App Service Plan
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('appServicePlanSku').name]",
        "tier": "[variables('appServicePlanSku').tier]"
      },
      "properties": {
        "reserved": false
      }
    },
    // 2) App Service (Web App)
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('appServiceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ]
    },
    // 3) Azure OpenAI
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2021-10-01",
      "name": "[parameters('openAiName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "S0"
      },
      "kind": "OpenAI",
      "properties": {
        "apiProperties": {}
      }
    },
    // 4) Application Insights
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "properties": {
        "Application_Type": "web"
      }
    },
    // 5) Azure Search
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2021-04-01-preview",
      "name": "[parameters('searchServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "standard"
      },
      "properties": {}
    },

    // ==========================
    // 6) Private Endpoints for:
    //    - Azure OpenAI
    //    - Azure Search
    //  Condition: "networkIsolation == true"
    // ==========================
    {
      "condition": "[parameters('networkIsolation')]",
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2021-05-01",
      "name": "[parameters('azureOpenAiPe')]",
      "location": "[parameters('location')]",
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('privateEndpointSubnetName'))]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "openAi-pe-conn",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName'))]",
              "groupIds": [
                "[variables('cognitiveServicesGroupId')]"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName'))]"
      ]
    },
    {
      "condition": "[parameters('networkIsolation')]",
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2021-05-01",
      "name": "[parameters('azureSearchPe')]",
      "location": "[parameters('location')]",
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('privateEndpointSubnetName'))]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "search-pe-conn",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Search/searchServices', parameters('searchServiceName'))]",
              "groupIds": [
                "[variables('searchGroupId')]"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Search/searchServices', parameters('searchServiceName'))]"
      ]
    }
  ],
  "outputs": {
    "appServiceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
    },
    "openAiId": {
      "type": "string",
      "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName'))]"
    },
    "appInsightsId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]"
    },
    "searchServiceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Search/searchServices', parameters('searchServiceName'))]"
    }
  }
}
