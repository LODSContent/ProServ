{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Azure location for all networking resources."
      }
    },
    "networkIsolation": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Set true to deploy private DNS zones & links for private endpoints."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet-default",
      "metadata": {
        "description": "Name of the Virtual Network."
      }
    },
    "vnetAddress": {
      "type": "string",
      "defaultValue": "10.0.0.0/23",
      "metadata": {
        "description": "Address space for the Virtual Network."
      }
    },

    "aiSubnetName": {
      "type": "string",
      "defaultValue": "ai-subnet",
      "metadata": {
        "description": "Name of the AI Services subnet."
      }
    },
    "aiSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/26",
      "metadata": {
        "description": "Address prefix for the AI Services subnet."
      }
    },
    "appIntSubnetName": {
      "type": "string",
      "defaultValue": "app-int-subnet",
      "metadata": {
        "description": "Name of the App Integration subnet (delegated to Microsoft.Web)."
      }
    },
    "appIntSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.128/26",
      "metadata": {
        "description": "Address prefix for the App Integration subnet."
      }
    },
    "appServicesSubnetName": {
      "type": "string",
      "defaultValue": "app-services-subnet",
      "metadata": {
        "description": "Name of the App Services subnet."
      }
    },
    "appServicesSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.192/26",
      "metadata": {
        "description": "Address prefix for the App Services subnet."
      }
    },
    "databaseSubnetName": {
      "type": "string",
      "defaultValue": "database-subnet",
      "metadata": {
        "description": "Name of the Database subnet."
      }
    },
    "databaseSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/26",
      "metadata": {
        "description": "Address prefix for the Database subnet."
      }
    },
    "bastionSubnetName": {
      "type": "string",
      "defaultValue": "AzureBastionSubnet",
      "metadata": {
        "description": "Name of the Bastion subnet."
      }
    },
    "bastionSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.64/26",
      "metadata": {
        "description": "Address prefix for the Bastion subnet."
      }
    },

    "aiNsgName": {
      "type": "string",
      "defaultValue": "ai-nsg",
      "metadata": {
        "description": "Name of the AI NSG."
      }
    },
    "appIntNsgName": {
      "type": "string",
      "defaultValue": "appInt-nsg",
      "metadata": {
        "description": "Name of the App Integration NSG."
      }
    },
    "appServicesNsgName": {
      "type": "string",
      "defaultValue": "appServices-nsg",
      "metadata": {
        "description": "Name of the App Services NSG."
      }
    },
    "databaseNsgName": {
      "type": "string",
      "defaultValue": "database-nsg",
      "metadata": {
        "description": "Name of the Database NSG."
      }
    },
    "bastionNsgName": {
      "type": "string",
      "defaultValue": "bastion-nsg",
      "metadata": {
        "description": "Name of the Bastion NSG."
      }
    },

    "appServicePlanId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID of the App Service Plan for delegation (optional)."
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the App Service Plan for delegation (optional)."
      }
    },

    "defaultSubnetName": {
      "type": "string",
      "defaultValue": "subnet-default",
      "metadata": {
        "description": "Name of the default subnet."
      }
    },
    "defaultSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.64/26",
      "metadata": {
        "description": "Address prefix for the default subnet."
      }
    },
    "defaultSubnetNsgName": {
      "type": "string",
      "defaultValue": "default-subnet-nsg",
      "metadata": {
        "description": "Name of the default subnet NSG."
      }
    },

    // NEW SUBNET for Private Endpoints (not delegated)
    "privateEndpointsSubnetName": {
      "type": "string",
      "defaultValue": "private-endpoints-subnet",
      "metadata": {
        "description": "Name of the subnet for any private endpoints (no delegation)."
      }
    },
    "privateEndpointsSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.2.0/26",
      "metadata": {
        "description": "Address prefix for the Private Endpoints subnet."
      }
    }
  },
  "variables": {
    "dnsZones": [
      "privatelink.blob.core.windows.net",
      "privatelink.documents.azure.com",
      "privatelink.vaultcore.azure.net",
      "privatelink.azurewebsites.net"
    ]
  },
  "resources": [
    // (1) Network Security Groups
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('aiNsgName')]",
      "location": "[parameters('location')]",
      "properties": { "securityRules": [] }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('appIntNsgName')]",
      "location": "[parameters('location')]",
      "properties": { "securityRules": [] }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('appServicesNsgName')]",
      "location": "[parameters('location')]",
      "properties": { "securityRules": [] }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('databaseNsgName')]",
      "location": "[parameters('location')]",
      "properties": { "securityRules": [] }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('bastionNsgName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowHttpsInbound",
            "properties": {
              "priority": 100,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "Internet",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443"
            }
          },
          {
            "name": "AllowGatewayManagerInbound",
            "properties": {
              "priority": 120,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "GatewayManager",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443"
            }
          },
          {
            "name": "AllowLoadBalancerInbound",
            "properties": {
              "priority": 110,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443"
            }
          },
          {
            "name": "AllowBastionHostCommunicationInBound",
            "properties": {
              "priority": 130,
              "protocol": "*",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "VirtualNetwork",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRanges": [
                "8080",
                "5701"
              ]
            }
          },
          {
            "name": "AllowSshRdpOutBound",
            "properties": {
              "priority": 100,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Outbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRanges": [ "22", "3389" ]
            }
          },
          {
            "name": "AllowAzureCloudCommunicationOutBound",
            "properties": {
              "priority": 110,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Outbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "AzureCloud"
            }
          },
          {
            "name": "AllowBastionHostCommunicationOutBound",
            "properties": {
              "priority": 120,
              "protocol": "*",
              "access": "Allow",
              "direction": "Outbound",
              "sourceAddressPrefix": "VirtualNetwork",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRanges": [
                "8080",
                "5701"
              ]
            }
          },
          {
            "name": "AllowGetSessionInformationOutBound",
            "properties": {
              "priority": 130,
              "protocol": "*",
              "access": "Allow",
              "direction": "Outbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "Internet",
              "destinationPortRanges": [
                "80",
                "443"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('defaultSubnetNsgName')]",
      "location": "[parameters('location')]",
      "properties": { "securityRules": [] }
    },

    // OPTIONAL: If you want NSG for private endpoints subnet:
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('privateEndpointsSubnetName'), '-nsg')]",
      "location": "[parameters('location')]",
      "properties": { "securityRules": [] }
    },

    // (2) The Virtual Network
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('aiNsgName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('appIntNsgName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('appServicesNsgName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionNsgName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('databaseNsgName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('defaultSubnetNsgName'))]",
        // If using a dedicated NSG for private-endpoints-subnet, add it here:
        "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('privateEndpointsSubnetName'), '-nsg'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddress')]"
          ]
        },
        "subnets": [
          // 2.1) AI Subnet
          {
            "name": "[parameters('aiSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('aiSubnetPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('aiNsgName'))]"
              }
            }
          },
          // 2.2) App Services Subnet
          {
            "name": "[parameters('appServicesSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('appServicesSubnetPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('appServicesNsgName'))]"
              }
            }
          },
          // 2.3) Database Subnet
          {
            "name": "[parameters('databaseSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('databaseSubnetPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('databaseNsgName'))]"
              }
            }
          },
          // 2.4) Bastion Subnet
          {
            "name": "[parameters('bastionSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('bastionSubnetPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionNsgName'))]"
              }
            }
          },
          // 2.5) Subnet delegated to App Service
          {
            "name": "[parameters('appIntSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('appIntSubnetPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "delegations": [
                {
                  "id": "[parameters('appServicePlanId')]",
                  "name": "[parameters('appServicePlanName')]",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverFarms"
                  }
                }
              ],
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('appIntNsgName'))]"
              }
            }
          },
          // 2.6) Default Subnet
          {
            "name": "[parameters('defaultSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('defaultSubnetPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('defaultSubnetNsgName'))]"
              }
            }
          },
          // 2.7) BRAND NEW SUBNET for Private Endpoints (NO DELEGATION)
          {
            "name": "[parameters('privateEndpointsSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('privateEndpointsSubnetPrefix')]",
              // Typically we set "privateEndpointNetworkPolicies" to Disabled for better performance, 
              // though it's optional:
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('privateEndpointsSubnetName'), '-nsg'))]"
              }
            }
          }
        ]
      }
    },

    // (3) Private DNS Zones - conditionally if "networkIsolation = true"
    {
      "condition": "[parameters('networkIsolation')]",
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "privatelink.blob.core.windows.net",
      "location": "global"
    },
    {
      "condition": "[parameters('networkIsolation')]",
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "privatelink.documents.azure.com",
      "location": "global"
    },
    {
      "condition": "[parameters('networkIsolation')]",
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "privatelink.vaultcore.azure.net",
      "location": "global"
    },
    {
      "condition": "[parameters('networkIsolation')]",
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "privatelink.azurewebsites.net",
      "location": "global"
    },

    // (4) Private DNS -> VNet Links
    {
      "condition": "[parameters('networkIsolation')]",
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "privatelink.blob.core.windows.net/vnetLink",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.blob.core.windows.net')]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "properties": {
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
        },
        "registrationEnabled": false
      }
    },
    {
      "condition": "[parameters('networkIsolation')]",
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "privatelink.documents.azure.com/vnetLink",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.documents.azure.com')]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "properties": {
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
        },
        "registrationEnabled": false
      }
    },
    {
      "condition": "[parameters('networkIsolation')]",
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "privatelink.vaultcore.azure.net/vnetLink",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.vaultcore.azure.net')]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "properties": {
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
        },
        "registrationEnabled": false
      }
    },
    {
      "condition": "[parameters('networkIsolation')]",
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "privatelink.azurewebsites.net/vnetLink",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azurewebsites.net')]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "properties": {
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
        },
        "registrationEnabled": false
      }
    }
  ],
  "outputs": {
    "vnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
    }
  }
}
